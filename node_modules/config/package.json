{
  "name": "config",
  "version": "0.4.35",
  "main": "./lib/config.js",
  "description": "Configuration control for production node deployments",
  "author": {
    "name": "Loren West",
    "email": "open_source@lorenwest.com"
  },
  "homepage": "http://lorenwest.github.com/node-config/",
  "directories": {
    "lib": "./lib",
    "config": "./config",
    "test": "./test"
  },
  "licenses": [
    "MIT"
  ],
  "dependencies": {},
  "devDependencies": {
    "js-yaml": "2.1.x",
    "coffee-script": ">=1.2.0",
    "vows": ">=0.5.13"
  },
  "repository": {
    "type": "git",
    "url": "http://github.com/lorenwest/node-config.git"
  },
  "engines": {
    "node": ">0.4.x"
  },
  "scripts": {
    "test": "./node_modules/vows/bin/vows test/*.js --spec"
  },
  "readme": "node-config\n===========\n\n[![Build Status](https://secure.travis-ci.org/lorenwest/node-config.png?branch=master)](https://travis-ci.org/lorenwest/node-config)<br>\n[![NPM](https://nodei.co/npm/config.png?downloads=true&stars=true)](https://nodei.co/npm/config/)<br>\n[![NPM](https://nodei.co/npm-dl/config.png?months=9)](https://nodei.co/npm/config/)\n\nConfiguration control for production node deployments\n\nIntroduction\n------------\n\nNode-config is a configuration system for Node.js application server\ndeployments.  It lets you define a default set of application parameters,\nand tune them for different runtime environments (development, qa,\nstaging, production, etc.).\n\nParameters defined by node-config can be monitored and tuned at runtime\nwithout bouncing your production servers.\n\nOnline documentation is available at <http://lorenwest.github.com/node-config/latest>\n\nQuick Start\n-----------\n\n**In your project directory, install and verify using npm:**\n\n    my-project$ npm install config\n    my-project$ npm test config\n\n**Edit the default configuration file (.js, .json, or .yaml):**\n\n    my-project$ mkdir config\n    my-project$ vi config/default.yaml\n\n    (example default.yaml file):\n\n    Customer:\n      dbHost: localhost\n      dbPort: 5984\n      dbName: customers\n\n**Edit the production configuration file:**\n\n    my-project$ vi config/production.yaml\n\n    (example production.yaml file):\n\n    Customer:\n      dbHost: prod-db-server\n\n**Use the configuration in your code:**\n\n    var CONFIG = require('config').Customer;\n    ...\n    db.connect(CONFIG.dbHost, CONFIG.dbPort, CONFIG.dbName);\n\n**Start your application server:**\n\n    my-project$ export NODE_ENV=production\n    my-project$ node app.js\n\nRunning in this configuration, CONFIG.dbPort and CONFIG.dbName\nwill come from the `default.yaml` file, and CONFIG.dbHost will\ncome from the `production.yaml` file.\n\n\nSee Also\n--------\n\n[config] - Online documentation<br>\n[monitor] - Remote monitoring for Node.js applications\n\nLicense\n-------\n\nMay be freely distributed under the MIT license\n\nSee `LICENSE` file.\n\nCopyright (c) 2010-2014 Loren West and other contributors\n\n  [config]: http://lorenwest.github.com/node-config/latest\n  [monitor]: https://github.com/lorenwest/node-monitor\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/lorenwest/node-config/issues"
  },
  "_id": "config@0.4.35",
  "dist": {
    "shasum": "96b954b86d69e3e615daaeef20f4a2cb4da24fe6"
  },
  "_from": "config@",
  "_resolved": "https://registry.npmjs.org/config/-/config-0.4.35.tgz"
}
